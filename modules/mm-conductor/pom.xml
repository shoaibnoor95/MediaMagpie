<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>de.wehner.mediamagpie</groupId>
		<artifactId>mm-base</artifactId>
		<version>0.1-SNAPSHOT</version>
		<relativePath>../../pom.xml</relativePath>
	</parent>

	<artifactId>mm-conductor</artifactId>
	<name>MediaMagpie Web</name>
	<packaging>${packaging.type}</packaging>

	<profiles>
		<profile>
			<id>jettyIntegrated</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<packaging.type>jar</packaging.type>
			</properties>
		</profile>
		<profile>
			<id>warFile</id>
			<properties>
				<packaging.type>war</packaging.type>
			</properties>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>mm-api</artifactId>
			<version>${project.version}</version>
		</dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>mm-core</artifactId>
            <version>${project.version}</version>
        </dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>mm-persistence</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>mm-aws</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- Some useful stuff -->
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring-framework.version}</version>
			<exclusions>
				<exclusion>
					<groupId>quartz</groupId>
					<artifactId>quartz</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring-framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
		</dependency>

		<!-- spring web service stuff -->
		<!-- <dependency> <groupId>org.springframework.ws</groupId> <artifactId>spring-ws</artifactId> <classifier>all</classifier> 
			</dependency> <dependency> <groupId>wsdl4j</groupId> <artifactId>wsdl4j</artifactId> </dependency> <dependency> 
			<groupId>org.springframework</groupId> <artifactId>spring-oxm</artifactId> </dependency> -->

		<!-- Jackson JSON Mapper (for marshall/unmarshall JSON objects) -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
		</dependency>

		<!-- Drewnoakes exif tool -->
		<dependency>
			<groupId>com.drewnoakes</groupId>
			<artifactId>metadata-extractor</artifactId>
		</dependency>

		<!-- rwe: checkout JAI as alternative for image processing -->
		<dependency>
			<groupId>javax.media.jai</groupId>
			<artifactId>com.springsource.javax.media.jai.core</artifactId>
			<version>1.1.3</version>
		</dependency>
		<dependency>
			<groupId>org.imgscalr</groupId>
			<artifactId>imgscalr-lib</artifactId>
			<version>4.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<!-- Hibernate/JPA -->
		<!-- <dependency> <groupId>org.hibernate</groupId> <artifactId>hibernate-search</artifactId> </dependency> 
			<dependency> <groupId>org.hibernate</groupId> <artifactId>hibernate-entitymanager</artifactId> </dependency> -->

		<!-- JSR 303 with Hibernate Validator, see http://www.roseindia.net/tutorial/spring/spring3/web/spring-3-mvc-validation-example.html -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>

		<!-- Logging for slf4j see also: http://blog.frankel.ch/thoughts-on-java-logging-and-slf4j -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<scope>runtime</scope>
			<!-- rwe: runtime needed for Slf4JLoggerTest, that needs the Log4j Logger directly -->
			<!-- <scope>provided</scope> -->
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>opensymphony</groupId>
			<artifactId>sitemesh</artifactId>
			<version>2.4.2</version>
		</dependency>

		<!-- freemarker -->
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>2.3.19</version>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
		</dependency>

		<!-- jetty -->
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jsp-api-2.1</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jsp-2.1</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty-java5-threadpool</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- VMWare Cloud Foundry -->
		<!-- <dependency> <groupId>org.cloudfoundry</groupId> <artifactId>cloudfoundry-runtime</artifactId> 
			<version>0.8.1</version> </dependency> -->

		<!-- Test -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.easytesting</groupId>
			<artifactId>fest-assert</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.subethamail</groupId>
			<artifactId>subethasmtp-wiser</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<!-- be careful when modifying the wtp/manifest entries, because this will have effect when creation 
					the MANIFEST.FM which contains some version information (ManifestMetaData.java) -->
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<!-- <wtpversion>2.0</wtpversion>
					<wtpmanifest>true</wtpmanifest>
					<wtpapplicationxml>true</wtpapplicationxml>
					<manifest>${basedir}/src/main/resources/META-INF/MANIFEST.MF</manifest>-->
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
					<!-- <projectNameTemplate>[artifactId]-[version]</projectNameTemplate> -->
				</configuration>
			</plugin>

			<!-- setup filter.properties used for MANIFEST.MF -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<!-- Safety -->
								<mkdir dir="${project.build.directory}" />

								<tstamp>
									<format property="last.updated" pattern="yyyy-MM-dd HH:mm:ss" />
								</tstamp>
								<echo file="${basedir}/target/filter.properties" message="build.time=${last.updated}" />
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<useDefaultManifestFile>true</useDefaultManifestFile>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
						<!-- <manifestEntries> <version>${project.version}</version> </manifestEntries> -->
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<inherited>true</inherited>
				<configuration>
					<useDefaultManifestFile>true</useDefaultManifestFile>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<!-- once: multiple threads, always: fore each test class pertest: fore each test method -->
					<forkMode>always</forkMode>
				</configuration>
			</plugin>


			<!-- Embedded Jetty (jetty:run) -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>${jetty.version}</version>
				<configuration>
					<systemProperties>
						<systemProperty>
							<name>log4j.configuration</name>
							<value>file:conf/log4j-console.xml</value>
						</systemProperty>
					</systemProperties>
					<contextPath>/</contextPath>
					<classesDirectory>target/classes</classesDirectory>
					<scanTargets>
						<file>target/classes</file>
					</scanTargets>
					<connectors>
						<connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
							<port>8080</port>
							<maxIdleTime>60000</maxIdleTime>
						</connector>
					</connectors>
					<scanIntervalSeconds>2</scanIntervalSeconds>
				</configuration>
			</plugin>

			<!-- Cargo - deploys to Tomcat using command 'mvn clean package cargo:redeploy'. -->
			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<configuration>
					<container>
						<containerId>tomcat6x</containerId>
						<type>remote</type>
					</container>
					<configuration>
						<type>runtime</type>
						<properties>
							<!-- Declare a tomcat.user and tomcat.password in your settings file -->
							<cargo.remote.username>${tomcat.username}</cargo.remote.username>
							<cargo.remote.password>${tomcat.password}</cargo.remote.password>
						</properties>
					</configuration>
				</configuration>
			</plugin>

			<plugin>
				<!-- NOTE: We don't need a groupId specification because the group is org.apache.maven.plugins ...which 
					is assumed by default. -->
				<artifactId>maven-assembly-plugin</artifactId>
				<!-- <version>2.2.1</version> -->
				<configuration>
					<descriptorRefs>
						<descriptorRef>project</descriptorRef>
					</descriptorRefs>
				</configuration>
			</plugin>
		</plugins>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<filters>
			<filter>${basedir}/target/filter.properties</filter>
		</filters>

	</build>
</project>
