<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd">

	<global-method-security secured-annotations="enabled" />
	
	<!-- for more security topics, read: http://www.codercorp.com/blog/spring/security-spring/custom-authenticationprocessingfilter-for-spring-security-to-perform-actions-on-login.html -->
	<http auto-config="true">
		<!-- <intercept-url pattern="/static/**" filters="none" /> <intercept-url pattern="/public/**" filters="none" /> -->
		<intercept-url pattern="/login*" access="IS_AUTHENTICATED_ANONYMOUSLY" requires-channel="https" />
		<intercept-url pattern="/config/admin/**" access="ROLE_ADMIN" requires-channel="https" />
		<intercept-url pattern="/config/**" access="ROLE_ADMIN,ROLE_USER" requires-channel="https" />
		<intercept-url pattern="/s3/**" access="ROLE_ADMIN,ROLE_USER" requires-channel="https" />
		<intercept-url pattern="/media/**" access="ROLE_USER,ROLE_ADMIN,ROLE_GUEST" requires-channel="any" />
		<intercept-url pattern="/upload/**" access="ROLE_USER,ROLE_ADMIN,ROLE_GUEST" requires-channel="any" />

		<form-login login-page="/login" login-processing-url="/loginProcess" default-target-url="/welcome"
			authentication-failure-url="/login?login_error=1" />
		<logout />
		<remember-me key="MediaMagpie-remember-me" token-validity-seconds="172800" user-service-ref="userSecurityService" />
		<access-denied-handler ref="accessDeniedHandler" />
		<port-mappings>
 			<!-- <port-mapping http="${webapp.port.http}" https="${webapp.port.https}" />-->
	        <!-- Default ports -->
	        <port-mapping http="80" https="443"/>
            <!-- local (developing) port mapping -->
            <port-mapping http="8088" https="8443"/>
	        <!-- My Vagrant port mapping -->
	        <port-mapping http="8090" https="8091"/>
	        <!-- Tomcat default ports -->
	        <port-mapping http="8080" https="8443"/>
	        <!-- Jetty custom ports -->
	        <port-mapping http="7777" https="7443"/>
        </port-mappings>
		<!-- session-fixation-protext=none will result in a JSESSIONID cookie which has NO secure flag, so it can be used booth in https and http. -->
		<session-management session-fixation-protection="none"/>
	</http>

	<authentication-manager>
		<authentication-provider ref="userDetailsAuthenticationProvider" />
		<!-- <authentication-provider user-service-ref="userDetailsAuthenticationProvider" /> <authentication-provider> <user-service> 
			<user name="admin" password="admin" authorities="ROLE_USER,ROLE_ADMIN" /> <user name="bob" password="bobspassword" authorities="ROLE_USER" 
			/> </user-service> </authentication-provider> -->
	</authentication-manager>


</beans:beans>