<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- The configuration is based on http://www.mkyong.com/spring-security/spring-security-remember-me-example/ -->

	<global-method-security secured-annotations="enabled" />

	<!-- for expression syntax see: http://docs.spring.io/spring-security/site/docs/3.0.x/reference/el-access.html -->
	<http auto-config="true" use-expressions="true">
		<!-- <intercept-url pattern="/static/**" filters="none" /> <intercept-url pattern="/public/**" filters="none" /> -->
		<intercept-url pattern="/login*" access="isAnonymous()" requires-channel="https" />
		<intercept-url pattern="/config/admin/**" access="hasRole('ROLE_ADMIN')" requires-channel="https" />
		<intercept-url pattern="/config/**" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')" requires-channel="https" />
		<intercept-url pattern="/s3/**" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')" requires-channel="https" />
		<intercept-url pattern="/media/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN','ROLE_GUEST')"
			requires-channel="any" />
		<intercept-url pattern="/upload/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN','ROLE_GUEST')"
			requires-channel="any" />

		<form-login login-page="/login" default-target-url="/welcome" authentication-failure-url="/login?login_error=1"
			username-parameter="username" password-parameter="password" login-processing-url="/auth/login_check"
			authentication-success-handler-ref="savedRequestAwareAuthenticationSuccessHandler" />
		<logout logout-success-url="/login?logout" delete-cookies="JSESSIONID" />

		<remember-me token-validity-seconds="5184000" remember-me-parameter="remember-me" data-source-ref="dataSource" />

		<port-mappings>
			<!-- <port-mapping http="${webapp.port.http}" https="${webapp.port.https}" /> -->
			<!-- Default ports -->
			<port-mapping http="80" https="443" />
			<!-- local (developing) port mapping -->
			<port-mapping http="8088" https="8443" />
			<!-- My Vagrant port mapping (direct to tomcat: 8090 -> 8080 and 8091 -> 8443) -->
			<port-mapping http="8090" https="8091" />
			<!-- My Vagrant port mapping (to apache2 and than to tomcat: 8081 -> 80 -> 8080 and 8082 ->8443 -> 8443) -->
			<port-mapping http="8081" https="8082" />
			<!-- Tomcat default ports -->
			<port-mapping http="8080" https="8443" />
			<!-- Jetty custom ports -->
			<port-mapping http="7777" https="7443" />
		</port-mappings>

		<!-- session-fixation-protection will result in a JSESSIONID cookie which has NO secure flag, so it can be used booth in 
			https and http. -->
		<session-management session-fixation-protection="none" />
	</http>

	<authentication-manager>
		<authentication-provider ref="userDetailsAuthenticationProvider" />
		<!-- <authentication-provider user-service-ref="userDetailsAuthenticationProvider" /> <authentication-provider> <user-service> 
			<user name="admin" password="admin" authorities="ROLE_USER,ROLE_ADMIN" /> <user name="bob" password="bobspassword" authorities="ROLE_USER" 
			/> </user-service> </authentication-provider> -->
	</authentication-manager>

	<!-- If request parameter "targetUrl" is existed, then forward to this url -->
	<!-- For update login form -->
	<beans:bean id="savedRequestAwareAuthenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<beans:property name="targetUrlParameter" value="targetUrl" />
	</beans:bean>

</beans:beans>